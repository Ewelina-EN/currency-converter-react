{"version":3,"sources":["Header/index.js","Amount/index.js","Currency/currencies.js","Currency/index.js","Buttons/index.js","Note/index.js","Result/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","Amount","amount","setAmount","value","onChange","target","type","step","placeholder","required","currencies","short","name","rate","Currency","currency","setCurrency","map","Buttons","resetForm","onClick","Note","Result","result","targetAmount","App","initialResult","useState","setResult","onSubmit","event","preventDefault","find","toFixed","calculateResult","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVASeA,EANA,SAACC,GAAD,OACX,wBAAQC,UAAU,SAAlB,kCCcWC,G,MAfA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAX,OACX,kCACI,sBACIH,UAAU,YADd,qCAEA,uBACII,MAAOF,EACPG,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBH,EAAUG,EAAOF,QAC3CJ,UAAU,QACVO,KAAK,SACLC,KAAK,OACLC,YAAY,YACZC,UAAQ,SCdPC,G,MAAa,CACtB,CACIC,MAAO,MACPC,KAAM,yBACNC,KAAM,MAEV,CACIF,MAAO,MACPC,KAAM,OACNC,KAAM,MAEV,CACIF,MAAO,MACPC,KAAM,kBACNC,KAAM,OCYCC,EApBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,YAAb,OACf,kCACE,sBAAMjB,UAAU,YAAhB,2BACA,wBACEA,UAAU,QACVI,MAAOY,EACPX,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBW,EAAYX,EAAOF,QAH/C,SAKGO,EAAWO,KAAK,SAAAF,GAAQ,OACvB,wBAEEZ,MAAOY,EAASJ,MAFlB,SAIGI,EAASH,MAHLG,EAASJ,gBCATO,G,MAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACZ,qCACI,wBAAQpB,UAAU,SAAlB,sBAEA,wBACIO,KAAK,QACLP,UAAU,SACVqB,QAASD,EAHb,oCCCOE,G,MANF,SAACvB,GAAD,OACT,mBAAGC,UAAU,OAAb,mECSWuB,G,MAVA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACX,oBAAGxB,UAAU,SAAb,mBACW,IACP,mCACKwB,EAAOC,aACPD,EAAOR,iBC4DLU,MA1Df,WAEE,IAAMC,EAAgB,CACpBF,aAAc,IACdT,SAAUL,EAAWC,OAGvB,EAA4BgB,mBAASD,GAArC,mBAAOH,EAAP,KAAeK,EAAf,KACA,EAA4BD,mBAAS,IAArC,mBAAO1B,EAAP,KAAeC,EAAf,KACA,EAAgCyB,mBAASjB,EAAW,GAAGC,OAAvD,mBAAOI,EAAP,KAAiBC,EAAjB,KAuBA,OACE,uBAAMa,SAXS,SAACC,GAChBA,EAAMC,iBAZgB,SAAChB,EAAUd,GACjC,IAAMY,EAAOH,EACVsB,MAAK,qBAAGrB,QAAsBI,KAC9BF,KAEHe,EAAU,CACRJ,cAAevB,EAASY,GAAMoB,QAAQ,GACtClB,SAAUA,IAMZmB,CAAgBnB,EAAUd,IAS1B,UACE,2BAAUF,UAAU,WAApB,UACE,cAAC,EAAD,IACA,4BACE,cAAC,EAAD,CACEE,OAAQA,EACRC,UAAWA,MAEf,4BACE,cAAC,EAAD,CACEa,SAAUA,EACVC,YAAaA,MAEjB,4BACE,cAAC,EAAD,CACEG,UArBQ,WAChBS,EAAUF,GACVxB,EAAU,WAsBR,cAAC,EAAD,IACA,cAAC,EAAD,CACEqB,OAAQA,QCnDDY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91c869aa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = (props) => (\r\n    <legend className=\"legend\">\r\n        KALKULATOR WALUTOWY\r\n    </legend>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Amount = ({ amount, setAmount }) => (\r\n    <label>\r\n        <span\r\n            className=\"labelText\">Kwota do przeliczenia*:</span>\r\n        <input\r\n            value={amount}\r\n            onChange={({ target }) => setAmount(target.value)}\r\n            className=\"field\"\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            placeholder=\"Kwota PLN\"\r\n            required />\r\n    </label>\r\n)\r\n\r\nexport default Amount;","export const currencies = [\r\n    {\r\n        short: \"USD\",\r\n        name: \"Dolar amerykański\",\r\n        rate: 3.78,\r\n    },\r\n    {\r\n        short: \"EUR\",\r\n        name: \"Euro\",\r\n        rate: 4.56,\r\n    },\r\n    {\r\n        short: \"SEK\",\r\n        name: \"Korona szwedzka\",\r\n        rate: 0.44,\r\n    },\r\n];","import React from \"react\";\r\nimport \"./style.css\";\r\nimport { currencies } from './currencies';\r\n\r\n\r\n\r\nconst Currency = ({ currency, setCurrency }) => (\r\n  <label>\r\n    <span className=\"labelText\">Przelicz na*:</span>\r\n    <select\r\n      className=\"field\"\r\n      value={currency}\r\n      onChange={({ target }) => setCurrency(target.value)}\r\n    >\r\n      {currencies.map((currency => (\r\n        <option\r\n          key={currency.short}\r\n          value={currency.short}\r\n        >\r\n          {currency.name}\r\n        </option>\r\n      )))}\r\n    </select>\r\n  </label>\r\n)\r\n\r\nexport default Currency;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nconst Buttons = ({ resetForm }) => (\r\n    <>\r\n        <button className=\"button\">Przelicz\r\n        </button>\r\n        <button\r\n            type=\"reset\"\r\n            className=\"button\"\r\n            onClick={resetForm}\r\n        >Wyczyść</button>\r\n    </>\r\n)\r\n\r\nexport default Buttons;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Note = (props) => (\r\n    <p className=\"note\">\r\n        Pola z oznaczeniem * wymagają wypełnienia\r\n    </p>\r\n)\r\n\r\nexport default Note;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Result = ({ result }) => (\r\n    <p className=\"result\">\r\n        WYNIK:{\" \"}\r\n        <strong>\r\n            {result.targetAmount}\r\n            {result.currency}\r\n        </strong>\r\n    </p>\r\n\r\n)\r\nexport default Result;\r\n","import React, { useState } from 'react';\r\nimport Header from \"./Header\";\r\nimport Amount from \"./Amount\";\r\nimport Currency from './Currency';\r\nimport Buttons from './Buttons';\r\nimport Note from './Note';\r\nimport Result from './Result';\r\nimport { currencies } from './Currency/currencies';\r\n\r\n\r\nfunction App() {\r\n\r\n  const initialResult = {\r\n    targetAmount: \" \",\r\n    currency: currencies.short,\r\n  };\r\n\r\n  const [result, setResult] = useState(initialResult);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [currency, setCurrency] = useState(currencies[0].short);\r\n\r\n  const calculateResult = (currency, amount) => {\r\n    const rate = currencies\r\n      .find(({ short }) => short === currency)\r\n      .rate;\r\n\r\n    setResult({\r\n      targetAmount: (amount / rate).toFixed(2),\r\n      currency: currency,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(currency, amount);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setResult(initialResult);\r\n    setAmount(0);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} >\r\n      <fieldset className=\"fieldset\">\r\n        <Header />\r\n        <p>\r\n          <Amount\r\n            amount={amount}\r\n            setAmount={setAmount} />\r\n        </p>\r\n        <p>\r\n          <Currency\r\n            currency={currency}\r\n            setCurrency={setCurrency} />\r\n        </p>\r\n        <p>\r\n          <Buttons\r\n            resetForm={resetForm} />\r\n        </p>\r\n      </fieldset>\r\n      <Note />\r\n      <Result\r\n        result={result} />\r\n    </form>\r\n\r\n  );\r\n};\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
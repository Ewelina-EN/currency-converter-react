{"version":3,"sources":["Header/styled.js","Header/index.js","Amount/styled.js","Amount/index.js","Currency/styled.js","Currency/index.js","Buttons/styled.js","Buttons/index.js","Note/styled.js","Note/index.js","Result/styled.js","Result/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","styled.js","ConnectionHandler/styled.js","ConnectionHandler/loading.js","ConnectionHandler/error.js","ConnectionHandler/index.js","App.js","useRatesAPI.js","reportWebVitals.js","background.jpg","GlobalStyled.js","index.js","theme.js"],"names":["StyledLegend","styled","legend","theme","color","black","firefly","white","Header","props","LabelText","span","AmountInpunt","input","Amount","amount","setAmount","value","onChange","target","type","step","placeholder","required","CurrencySelect","select","lightGrey","Currency","currency","rates","setCurrency","map","rate","short","StyledButton","button","Buttons","resetForm","className","onClick","StyledNote","p","Note","date","StyledResult","Result","result","targetAmount","StyledClock","formatDate","toLocaleDateString","undefined","day","weekday","month","year","hour","minute","second","Clock","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","Form","form","Fieldset","fieldset","azure","StyledConnectionHandler","Loading","Error","ConnectionHandler","state","App","initialResult","ratesData","setRatesData","setTimeout","fetch","then","response","ok","console","log","statusText","json","rates_parsed","Object","entries","key","push","catch","useRatesAPI","setResult","onSubmit","event","preventDefault","find","toFixed","calculateResult","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyled","createGlobalStyle","background","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAEaA,EAAeC,IAAOC,OAAV,mJACD,qBAAGC,MAAkBC,MAAMC,SAC3B,qBAAGF,MAAkBC,MAAME,WACtC,qBAAGH,MAAkBC,MAAMG,S,OCIzBC,EANA,SAACC,GAAD,OACX,cAACT,EAAD,mCCFSU,EAAYT,IAAOU,KAAV,mKACT,qBAAGR,MAAkBC,MAAMC,SAQ3BO,EAAeX,IAAOY,MAAV,sKACD,qBAAGV,MAAkBC,MAAMC,SAC/B,qBAAGF,MAAkBC,MAAMC,SCKhCS,EAfA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAX,OACX,kCACI,cAACN,EAAD,sCAEA,cAACE,EAAD,CACIK,MAAOF,EACPG,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBH,EAAUG,EAAOF,QAC3CG,KAAK,SACLC,KAAK,OACLC,YAAY,YACZC,UAAQ,QCXPb,EAAYT,IAAOU,KAAV,mKACT,qBAAGR,MAAkBC,MAAMC,SAQ3BmB,EAAiBvB,IAAOwB,OAAV,sKACH,qBAAGtB,MAAkBC,MAAMsB,aAC/B,qBAAGvB,MAAkBC,MAAMC,SCWhCsB,EArBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,YAApB,OACf,kCACE,cAAC,EAAD,4BAGA,cAACN,EAAD,CACEP,MAAOW,EACPV,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBW,EAAYX,EAAOF,QAF/C,SAIGY,EAAME,KAAK,SAAAC,GAAI,OACd,wBAEEf,MAAOe,EAAKC,MAFd,SAIGD,EAAKC,OAHDD,EAAKC,gBCZPC,EAAejC,IAAOkC,OAAV,uSAGD,qBAAGhC,MAAkBC,MAAME,WACtC,qBAAGH,MAAkBC,MAAMG,SCYzB6B,EAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACZ,qCACI,cAACH,EAAD,uBAGA,cAACA,EAAD,CACId,KAAK,QACLkB,UAAU,SACVC,QAASF,EAHb,mCCNKG,EAAavC,IAAOwC,EAAV,sEACV,qBAAGtC,MAAkBC,MAAMG,SCMzBmC,EANF,SAACjC,GAAD,OACT,eAAC+B,EAAD,uGACmF,iCAAS/B,EAAMoB,MAAMc,OADxG,6DCFSC,EAAe3C,IAAOwC,EAAV,2NACD,qBAAGtC,MAAkBC,MAAME,WAC3B,qBAAGH,MAAkBC,MAAMC,SACtC,qBAAGF,MAAkBC,MAAMG,SCQzBsC,EAVA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACX,eAACF,EAAD,oBACW,IACP,mCACKE,EAAOC,aACPD,EAAOlB,gBCNPoB,EAAc/C,IAAOwC,EAAV,gGCElBQ,EAAa,SAACN,GAAD,OAAUA,EAAKO,wBAAmBC,EAAW,CAC5DC,IAAK,UACLC,QAAS,OACTC,MAAO,OACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,OAAQ,aAeGC,EAZD,WACV,IAAMhB,ECboB,WAC1B,MAAwBiB,mBAAS,IAAIC,MAArC,mBAAOlB,EAAP,KAAamB,EAAb,KAWA,OATAC,qBAAU,WACN,IAAMC,EAAaC,aAAY,WAC3BH,EAAQ,IAAID,QACb,KACH,OAAO,WACHK,cAAcF,MAEnB,IAEIrB,EDCMwB,GAEb,OACI,eAACnB,EAAD,0BAEK,IACAC,EAAWN,OEnBXyB,EAAOnE,IAAOoE,KAAV,qEAKJC,EAAWrE,IAAOsE,SAAV,0LAIG,qBAAGpE,MAAkBC,MAAMC,SAE3B,qBAAGF,MAAkBC,MAAMoE,SCXtCC,EAA0BxE,IAAOsE,SAAV,0LAIZ,qBAAGpE,MAAkBC,MAAMC,SAE3B,qBAAGF,MAAkBC,MAAMoE,SCCpCE,EANC,SAACjE,GAAD,OACZ,cAACgE,EAAD,gHCKWE,EAND,SAAClE,GAAD,OACV,cAACgE,EAAD,iHCOWG,EARW,SAACnE,GACvB,MAA0B,YAAtBA,EAAMoB,MAAMgD,MACLH,EAAQjE,GACc,UAAtBA,EAAMoB,MAAMgD,MACZF,EAAMlE,QADV,GCyEIqE,I,EAAAA,EAnEf,WAEE,IAAMC,EAAgB,CACpBhC,aAAc,IACdnB,SACE,OAEEC,ECjBmB,WACvB,MAAkC+B,mBAAS,CACvCiB,MAAO,UACPlC,KAAM,KACNd,MAAO,CAAC,CAAEI,MAAO,cAHrB,mBAAO+C,EAAP,KAAkBC,EAAlB,KAsCA,OAhCAlB,qBAAU,WA6BNmB,YA5Be,WAGXC,MAFyB,iDAGpBC,MAAK,SAAAC,GACF,IAAKA,EAASC,GAEV,MADAC,QAAQC,IAAIH,EAASI,YACf,IAAId,MAAMU,EAASI,YAE7B,OAAOJ,KAEVD,MAAK,SAAAC,GAAQ,OAAIA,EAASK,UAC1BN,MAAK,SAAAC,GAEF,IADA,IAAMM,EAAe,GACrB,MAA2BC,OAAOC,QAAQR,EAASxD,OAAnD,eAA2D,CAAtD,0BAAOiE,EAAP,KAAY7E,EAAZ,KACD0E,EAAaI,KAAK,CACd9D,MAAO6D,EACP9D,KAAMf,IAGdgE,EAAa,CACTJ,MAAO,KACPlC,KAAM0C,EAAS1C,KACfd,MAAO8D,OAGdK,OAAM,kBAAMf,EAAa,CAAEJ,MAAO,eAExB,OACpB,IAEIG,EDtBKiB,GACd,EAA4BrC,mBAASmB,GAArC,mBAAOjC,EAAP,KAAeoD,EAAf,KACA,EAA4BtC,mBAAS,IAArC,mBAAO7C,EAAP,KAAeC,EAAf,KACA,EAAgC4C,qBAAhC,mBAAOhC,EAAP,KAAiBE,EAAjB,KAsBA,OACE,eAACsC,EAAD,CACE+B,SAZa,SAACC,GAChBA,EAAMC,iBAXgB,SAACzE,EAAUb,GACjC,IAAMiB,EAAOH,EAAMA,MAChByE,MAAK,qBAAGrE,QAAsBL,KAC9BI,KACHkE,EAAU,CACRnD,cAAehC,EAASiB,GAAMuE,QAAQ,GACtC3E,SAAUA,IAMZ4E,CAAgB5E,EAAUb,IAS1B,UAEmB,OAAhBc,EAAMgD,MACL,cAAC,EAAD,CAAmBhD,MAAOA,IAE1B,qCACE,eAACyC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,4BACE,cAAC,EAAD,CACEvD,OAAQA,EACRC,UAAWA,MAEf,4BACE,cAAC,EAAD,CACEa,MAAOA,EAAMA,MACbD,SAAUA,EACVE,YAAaA,MAEjB,4BACE,cAAC,EAAD,CACEO,UA5BI,WAChB6D,EAAUnB,GACV/D,EAAU,WA6BJ,cAAC,EAAD,CACEa,MAAOA,IAET,cAAC,EAAD,CACEiB,OAAQA,OA7BhB,QEjCW2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCPC,MAA0B,uCCG5BO,EAAeC,YAAH,sXAeIC,GCV7BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAenH,MCVE,CACjBC,MAAO,CACHC,MAAO,UACPE,MAAO,UACPD,QAAS,UACToB,UAAW,UACX8C,MAAO,cDIX,UACE,cAACyC,EAAD,IACA,cAAC,EAAD,SAGJM,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.c4432c91.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledLegend = styled.legend`\r\n    border: 1px solid ${({ theme }) => theme.color.black};\r\n    background-color: ${({ theme }) => theme.color.firefly};\r\n    color: ${({ theme }) => theme.color.white}; \r\n    padding: 10px;\r\n    border-radius: 5px;\r\n`;","import React from \"react\";\r\nimport { StyledLegend } from \"./styled\";\r\n\r\nconst Header = (props) => (\r\n    <StyledLegend>\r\n        KALKULATOR WALUTOWY\r\n    </StyledLegend>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const LabelText = styled.span`\r\n    color: ${({ theme }) => theme.color.black};\r\n    display: inline-block;\r\n    width: 100%;\r\n    max-width: 150px;\r\n    margin-right: 5px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const AmountInpunt = styled.input`\r\n    border: 1px solid ${({ theme }) => theme.color.black};\r\n    border-color: ${({ theme }) => theme.color.black};\r\n    padding: 10px;\r\n    width: 100%;\r\n    max-width: 400px;\r\n    border-radius: 5px;\r\n`;","import React from \"react\";\r\nimport { LabelText, AmountInpunt } from \"./styled\";\r\n\r\nconst Amount = ({ amount, setAmount }) => (\r\n    <label>\r\n        <LabelText>Kwota do przeliczenia*:\r\n        </LabelText>\r\n        <AmountInpunt\r\n            value={amount}\r\n            onChange={({ target }) => setAmount(target.value)}\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            placeholder=\"Kwota PLN\"\r\n            required\r\n        />\r\n    </label>\r\n);\r\n\r\nexport default Amount;","import styled from \"styled-components\";\r\n\r\nexport const LabelText = styled.span`\r\n    color: ${({ theme }) => theme.color.black};\r\n    display: inline-block;\r\n    width: 100%;\r\n    max-width: 150px;\r\n    margin-right: 5px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const CurrencySelect = styled.select`\r\n    border: 1px solid ${({ theme }) => theme.color.lightGrey};\r\n    border-color: ${({ theme }) => theme.color.black};\r\n    padding: 10px;\r\n    width: 100%;\r\n    max-width: 400px;\r\n    border-radius: 5px;\r\n`;","import React from \"react\";\r\nimport { CurrencySelect, LabelText } from \"./styled\";\r\n\r\nconst Currency = ({ currency, rates, setCurrency }) => (\r\n  <label>\r\n    <LabelText>\r\n      Przelicz na*:\r\n    </LabelText>\r\n    <CurrencySelect\r\n      value={currency}\r\n      onChange={({ target }) => setCurrency(target.value)}\r\n    >\r\n      {rates.map((rate => (\r\n        <option\r\n          key={rate.short}\r\n          value={rate.short}\r\n        >\r\n          {rate.short}\r\n        </option>\r\n      )))}\r\n    </CurrencySelect>\r\n  </label>\r\n)\r\n\r\nexport default Currency;","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n    border: none;\r\n    margin: 10px;\r\n    background-color: ${({ theme }) => theme.color.firefly};\r\n    color: ${({ theme }) => theme.color.white};\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n        &:hover {\r\n            filter: brightness(110%);\r\n        }\r\n        &:active {\r\n            filter: brightness(120%);\r\n        }\r\n`;","import React from \"react\";\r\nimport { StyledButton } from \"./styled\";\r\n\r\nconst Buttons = ({ resetForm }) => (\r\n    <>\r\n        <StyledButton>\r\n            Przelicz\r\n        </StyledButton>\r\n        <StyledButton\r\n            type=\"reset\"\r\n            className=\"button\"\r\n            onClick={resetForm}\r\n        >\r\n            Wyczyść\r\n        </StyledButton>\r\n    </>\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledNote = styled.p`\r\n    color: ${({ theme }) => theme.color.white};\r\n    text-align: center;\r\n`;","import React from \"react\";\r\nimport { StyledNote } from \"./styled\";\r\n\r\nconst Note = (props) => (\r\n    <StyledNote>\r\n        Kursy walut pobierane są z Europejskiego Banku Centralnego. Aktualne na dzień: <strong>{props.rates.date}</strong>. Pola z oznaczeniem * wymagają wypełnienia.\r\n    </StyledNote>\r\n)\r\n\r\nexport default Note;","import styled from \"styled-components\";\r\n\r\nexport const StyledResult = styled.p`\r\n    background-color: ${({ theme }) => theme.color.firefly};\r\n    border: 2px solid ${({ theme }) => theme.color.black}; ;\r\n    color: ${({ theme }) => theme.color.white}; \r\n    max-width: 700px;\r\n    margin: 0 auto;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    text-align: center;\r\n`;","import React from \"react\";\r\nimport { StyledResult } from \"./styled\";\r\n\r\nconst Result = ({ result }) => (\r\n    <StyledResult>\r\n        WYNIK:{\" \"}\r\n        <strong>\r\n            {result.targetAmount}\r\n            {result.currency}\r\n        </strong>\r\n    </StyledResult>\r\n\r\n)\r\nexport default Result;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledClock = styled.p`\r\n    text-align: end;\r\n    padding: 0 30px;\r\n    margin: auto 20px;\r\n`;","import React from 'react';\r\nimport { StyledClock } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst formatDate = (date) => date.toLocaleDateString(undefined, {\r\n    day: \"numeric\",\r\n    weekday: \"long\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\",\r\n});\r\n\r\nconst Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <StyledClock>\r\n            Dzisiaj jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </StyledClock>\r\n    );\r\n};\r\n\r\nexport default Clock;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n    width: 100%;\r\n    max-width: 600px;\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    text-align: center;\r\n    margin: 20px auto;\r\n    padding: 20px 0 20px;\r\n    border: 2px solid ${({ theme }) => theme.color.black};\r\n    border-radius: 10px;\r\n    background-color: ${({ theme }) => theme.color.azure};\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledConnectionHandler = styled.fieldset`\r\n    text-align: center;\r\n    margin: 20px auto;\r\n    padding: 20px 0 20px;\r\n    border: 2px solid ${({ theme }) => theme.color.black};\r\n    border-radius: 10px;\r\n    background-color: ${({ theme }) => theme.color.azure};\r\n`;","import React from \"react\";\r\nimport { StyledConnectionHandler } from \"./styled\";\r\n\r\nconst Loading = (props) => (\r\n    <StyledConnectionHandler>\r\n        Chwila cierpliwości...Ładuję kursy walut z Europejskiego Banku Centralnego ⏳\r\n    </StyledConnectionHandler>\r\n);\r\n\r\nexport default Loading;","import React from \"react\";\r\nimport { StyledConnectionHandler } from \"./styled\";\r\n\r\nconst Error = (props) => (\r\n    <StyledConnectionHandler>\r\n        🛠️ Hmm... Coś poszło nie tak. Spróbuj jeszcze raz później...\r\n    </StyledConnectionHandler>\r\n);\r\n\r\nexport default Error;","import Loading from \"./loading\"\r\nimport Error from \"./error\";\r\n\r\nconst ConnectionHandler = (props) => {\r\n    if (props.rates.state === \"loading\") {\r\n        return Loading(props);\r\n    } else if (props.rates.state === \"error\") {\r\n        return Error(props);\r\n    }\r\n};\r\n\r\nexport default ConnectionHandler;\r\n","import React, { useState } from 'react';\r\nimport Header from \"./Header\";\r\nimport Amount from \"./Amount\";\r\nimport Currency from './Currency';\r\nimport Buttons from './Buttons';\r\nimport Note from './Note';\r\nimport Result from './Result';\r\nimport Clock from './Clock';\r\nimport { Fieldset, Form } from \"./styled\";\r\nimport { useRatesAPI } from './useRatesAPI';\r\nimport ConnectionHandler from './ConnectionHandler';\r\n\r\nfunction App() {\r\n\r\n  const initialResult = {\r\n    targetAmount: \" \",\r\n    currency:\r\n      'USD',\r\n  };\r\n  const rates = useRatesAPI();\r\n  const [result, setResult] = useState(initialResult);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [currency, setCurrency] = useState();\r\n\r\n  const calculateResult = (currency, amount) => {\r\n    const rate = rates.rates\r\n      .find(({ short }) => short === currency)\r\n      .rate;\r\n    setResult({\r\n      targetAmount: (amount / rate).toFixed(2),\r\n      currency: currency,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(currency, amount);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setResult(initialResult);\r\n    setAmount(0);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}>\r\n      {rates.state !== \"ok\" ? (\r\n        <ConnectionHandler rates={rates} />\r\n      ) : (\r\n        <>\r\n          <Fieldset>\r\n            <Header />\r\n            <Clock />\r\n            <p>\r\n              <Amount\r\n                amount={amount}\r\n                setAmount={setAmount} />\r\n            </p>\r\n            <p>\r\n              <Currency\r\n                rates={rates.rates}\r\n                currency={currency}\r\n                setCurrency={setCurrency} />\r\n            </p>\r\n            <p>\r\n              <Buttons\r\n                resetForm={resetForm} />\r\n            </p>\r\n          </Fieldset>\r\n          <Note\r\n            rates={rates}\r\n          />\r\n          <Result\r\n            result={result} />\r\n        </>)};\r\n    </Form>\r\n  );\r\n};\r\nexport default App;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useRatesAPI = () => {\r\n    const [ratesData, setRatesData] = useState({\r\n        state: \"loading\",\r\n        date: null,\r\n        rates: [{ short: \"loading\" }],\r\n    });\r\n\r\n    useEffect(() => {\r\n        const getAPI = () => {\r\n            const currenciesAPIUrl = \"https://api.exchangerate.host/latest?base=PLN\";\r\n\r\n            fetch(currenciesAPIUrl)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        console.log(response.statusText);\r\n                        throw new Error(response.statusText);\r\n                    }\r\n                    return response;\r\n                })\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    const rates_parsed = [];\r\n                    for (const [key, value] of Object.entries(response.rates)) {\r\n                        rates_parsed.push({\r\n                            short: key,\r\n                            rate: value,\r\n                        })\r\n                    }\r\n                    setRatesData({\r\n                        state: \"ok\",\r\n                        date: response.date,\r\n                        rates: rates_parsed,\r\n                    })\r\n                })\r\n                .catch(() => setRatesData({ state: \"error\" }));\r\n        };\r\n        setTimeout(getAPI, 2000);\r\n    }, []);\r\n\r\n    return ratesData;\r\n};\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/background.57674f4d.jpg\";","import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"./background.jpg\";\r\n\r\nexport const GlobalStyled = createGlobalStyle`\r\nhtml {\r\n    box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n    box-sizing: inherit;\r\n}\r\n\r\n#root {\r\n    font-family: 'Jaldi', sans-serif;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-height: 100vh;\r\n    background-image: url(\"${background}\");\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { GlobalStyled } from \"./GlobalStyled\";\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { theme } from \"./theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyled />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const theme = {\r\n    color: {\r\n        black: \"#000000\",\r\n        white: \"#FFFFFF\",\r\n        firefly: \"#0F2637\",\r\n        lightGrey: \"#E7ECE6\",\r\n        azure: \"#adffff9e\"\r\n    }\r\n};"],"sourceRoot":""}